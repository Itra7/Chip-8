//
// Created by filip on 1/13/25.
//

#pragma once

#include <cstdint>
#include <string>

// 0x200-0xFFF reserved memory for programs, 0x000-0x1FF reserved for interpreter
const unsigned int memory_size = 4096;
const unsigned int registers_size = 16;
const unsigned int fontset_size = 80;
const unsigned int SCREEN_WIDTH = 64;
const unsigned int SCREEN_HEIGHT = 32;

uint8_t fontset[fontset_size] =
{
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

class Chip8 {
  public:
    Chip8();
    void LoadRom(const std::string pathtofile);
    void Cycle();
    void getMemory(int index);
	 
    uint8_t memory[memory_size];
    uint16_t opcode;


  private:

    // 16 8-bit data registers V0-VF
    uint8_t V[registers_size];
    // we will use mask 0x0FFF to ensure 12bits
    uint16_t I;
    uint16_t pc;
    uint16_t stack[16];
    uint8_t sp;
    uint8_t delay_timer;
    uint8_t sound_timer;
    uint8_t key[16];
    uint8_t video[64 * 32]{0};
};
